AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VPCName:
    Description: The name of the VPC
    Type: String
    Default: VPC Public and Private with NAT
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Public0:
      CIDR: 10.0.0.0/24
    Public1:
      CIDR: 10.0.1.0/24
    Private0:
      CIDR: 10.0.2.0/24
    Private1:
      CIDR: 10.0.3.0/24
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - VPC
          - CIDR
      Tags:
        - Key: Name
          Value: Lab-VPC
  PublicSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Public0
          - CIDR
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Lab-public-subnet-0
        - Key: Network
          Value: Public
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Public1
          - CIDR
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Lab-public-subnet-1
        - Key: Network
          Value: Public
  PrivateSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Private0
          - CIDR
      Tags:
        - Key: Name
          Value: Lab-private-subnet-0
        - Key: Network
          Value: Private
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        'Fn::FindInMap':
          - SubnetConfig
          - Private1
          - CIDR
      Tags:
        - Key: Name
          Value: Lab-private-subnet-1
        - Key: Network
          Value: Private
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: Lab-internet-gateway
        - Key: Network
          Value: Public
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Lab-public-route-table
        - Key: Network
          Value: Public
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation0:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet0
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  NATIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Lab-NAT-ip
        - Key: Network
          Value: Private
  NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        'Fn::GetAtt':
          - NATIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet0
      Tags:
        - Key: Name
          Value: Lab-NAT-gateway
        - Key: Network
          Value: Private
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Lab-private-route-table
        - Key: Network
          Value: Public
  PrivateRouteToInternet:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
  PrivateSubnetRouteTableAssociation0:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet0
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable
Outputs:
  VPCId:
    Description: VPCId of VPC
    Value:
      Ref: VPC
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-VPC'
  PublicSubnet0:
    Description: SubnetId of public subnet 0
    Value:
      Ref: PublicSubnet0
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PublicSubnet0'
  PublicSubnet1:
    Description: SubnetId of public subnet 1
    Value:
      Ref: PublicSubnet1
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PublicSubnet1'
  PrivateSubnet0:
    Description: SubnetId of private subnet 0
    Value:
      Ref: PrivateSubnet0
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PrivateSubnet0'
  PrivateSubnet1:
    Description: SubnetId of private subnet 1
    Value:
      Ref: PrivateSubnet1
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PrivateSubnet1'
